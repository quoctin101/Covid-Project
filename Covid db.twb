<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20213.21.1018.0949                               -->
<workbook original-version='18.1' source-build='2021.3.3 (20213.21.1018.0949)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (Tableau Table 1)' inline='true' name='federated.0wtaafb0c15kwv14vb0rb0pq27q9' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 1' name='excel-direct.1b0pz0b01zkjbk10cbvu00t2ns04'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/TQH9660/OneDrive - Rank Group/Desktop/Tableau/data source/Data for Taubleau/Tableau Table 1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1b0pz0b01zkjbk10cbvu00t2ns04' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D2:no:A1:D2:0' header='yes' outcome='6'>
            <column datatype='integer' name='count' ordinal='0' />
            <column datatype='integer' name='total_cases' ordinal='1' />
            <column datatype='integer' name='total_deaths' ordinal='2' />
            <column datatype='real' name='DeathPercentage' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1b0pz0b01zkjbk10cbvu00t2ns04' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D2:no:A1:D2:0' header='yes' outcome='6'>
            <column datatype='integer' name='count' ordinal='0' />
            <column datatype='integer' name='total_cases' ordinal='1' />
            <column datatype='integer' name='total_deaths' ordinal='2' />
            <column datatype='real' name='DeathPercentage' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D2:no:A1:D2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[count]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>count</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_02EF17F28C4D44D3B81B30178634E4A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_02EF17F28C4D44D3B81B30178634E4A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_02EF17F28C4D44D3B81B30178634E4A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_02EF17F28C4D44D3B81B30178634E4A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_02EF17F28C4D44D3B81B30178634E4A3]' role='measure' type='quantitative' />
      <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_02EF17F28C4D44D3B81B30178634E4A3'>
            <properties context=''>
              <relation connection='excel-direct.1b0pz0b01zkjbk10cbvu00t2ns04' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D2:no:A1:D2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='count' ordinal='0' />
                  <column datatype='integer' name='total_cases' ordinal='1' />
                  <column datatype='integer' name='total_deaths' ordinal='2' />
                  <column datatype='real' name='DeathPercentage' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Tableau Table 2 (Tableau Table 2)' inline='true' name='federated.0eddi561nto7ge1h2tgnh0j95aqd' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 2' name='excel-direct.0e495lr1m451lt18057bq12sdbn8'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/TQH9660/OneDrive - Rank Group/Desktop/Tableau/data source/Data for Taubleau/Tableau Table 2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0e495lr1m451lt18057bq12sdbn8' name='Tableau Table 2' table='[&apos;Tableau Table 2$&apos;]' type='table'>
          <columns gridOrigin='A1:B11:no:A1:B11:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0e495lr1m451lt18057bq12sdbn8' name='Tableau Table 2' table='[&apos;Tableau Table 2$&apos;]' type='table'>
          <columns gridOrigin='A1:B11:no:A1:B11:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Tableau Table 2]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B11:no:A1:B11:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Tableau Table 2]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Tableau Table 2_8F898AF4304146EEAF7AC77EC960CBC8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Tableau Table 2]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Tableau Table 2_8F898AF4304146EEAF7AC77EC960CBC8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Tableau Table 2' datatype='table' name='[__tableau_internal_object_id__].[Tableau Table 2_8F898AF4304146EEAF7AC77EC960CBC8]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Tableau Table 2' id='Tableau Table 2_8F898AF4304146EEAF7AC77EC960CBC8'>
            <properties context=''>
              <relation connection='excel-direct.0e495lr1m451lt18057bq12sdbn8' name='Tableau Table 2' table='[&apos;Tableau Table 2$&apos;]' type='table'>
                <columns gridOrigin='A1:B11:no:A1:B11:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Tableau Table 3 (Tableau Table 3)' inline='true' name='federated.1i3xzx117rvy6415swvm31ebllh5' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 3' name='excel-direct.1ecep1118cq2id11rubh60y0k2ff'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/TQH9660/OneDrive - Rank Group/Desktop/Tableau/data source/Data for Taubleau/Tableau Table 3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1ecep1118cq2id11rubh60y0k2ff' name='Tableau Table 3' table='[&apos;Tableau Table 3$&apos;]' type='table'>
          <columns gridOrigin='A1:D238:no:A1:D238:0' header='yes' outcome='2'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1ecep1118cq2id11rubh60y0k2ff' name='Tableau Table 3' table='[&apos;Tableau Table 3$&apos;]' type='table'>
          <columns gridOrigin='A1:D238:no:A1:D238:0' header='yes' outcome='2'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Tableau Table 3]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D238:no:A1:D238:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Tableau Table 3]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Tableau Table 3_B40B0E9EA3444753A659B72CA80D0971]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Tableau Table 3]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Tableau Table 3_B40B0E9EA3444753A659B72CA80D0971]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Tableau Table 3]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Tableau Table 3_B40B0E9EA3444753A659B72CA80D0971]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Tableau Table 3]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Tableau Table 3_B40B0E9EA3444753A659B72CA80D0971]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Tableau Table 3' datatype='table' name='[__tableau_internal_object_id__].[Tableau Table 3_B40B0E9EA3444753A659B72CA80D0971]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Tableau Table 3' id='Tableau Table 3_B40B0E9EA3444753A659B72CA80D0971'>
            <properties context=''>
              <relation connection='excel-direct.1ecep1118cq2id11rubh60y0k2ff' name='Tableau Table 3' table='[&apos;Tableau Table 3$&apos;]' type='table'>
                <columns gridOrigin='A1:D238:no:A1:D238:0' header='yes' outcome='2'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Tableau Table 4 (Tableau Table 4)' inline='true' name='federated.0ljawxn0wirbvt105ipyd0cz2b8g' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 4' name='excel-direct.1biqic01aj41dg172ueez0enbs0n'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/TQH9660/OneDrive - Rank Group/Desktop/Tableau/data source/Data for Taubleau/Tableau Table 4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1biqic01aj41dg172ueez0enbs0n' name='Tableau Table 4' table='[&apos;Tableau Table 4$&apos;]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1biqic01aj41dg172ueez0enbs0n' name='Tableau Table 4' table='[&apos;Tableau Table 4$&apos;]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Tableau Table 4]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Tableau Table 4]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Tableau Table 4_D90724DD72C44358AC9D565C5685800A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Tableau Table 4]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Tableau Table 4_D90724DD72C44358AC9D565C5685800A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Tableau Table 4]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Tableau Table 4_D90724DD72C44358AC9D565C5685800A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Tableau Table 4]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Tableau Table 4_D90724DD72C44358AC9D565C5685800A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Tableau Table 4]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Tableau Table 4_D90724DD72C44358AC9D565C5685800A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Tableau Table 4' datatype='table' name='[__tableau_internal_object_id__].[Tableau Table 4_D90724DD72C44358AC9D565C5685800A]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Location:nk]&#10;[none:Forecast Indicator:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Canada&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Japan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Italy&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Germany&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Africa&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;United States&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map-pri>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Tableau Table 4' id='Tableau Table 4_D90724DD72C44358AC9D565C5685800A'>
            <properties context=''>
              <relation connection='excel-direct.1biqic01aj41dg172ueez0enbs0n' name='Tableau Table 4' table='[&apos;Tableau Table 4$&apos;]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Gobal Number'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Gobal Number&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 1)' name='federated.0wtaafb0c15kwv14vb0rb0pq27q9' />
          </datasources>
          <datasource-dependencies datasource='federated.0wtaafb0c15kwv14vb0rb0pq27q9'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wtaafb0c15kwv14vb0rb0pq27q9].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0wtaafb0c15kwv14vb0rb0pq27q9].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0wtaafb0c15kwv14vb0rb0pq27q9].[sum:total_deaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0wtaafb0c15kwv14vb0rb0pq27q9].[sum:DeathPercentage:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0wtaafb0c15kwv14vb0rb0pq27q9].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0wtaafb0c15kwv14vb0rb0pq27q9].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.0wtaafb0c15kwv14vb0rb0pq27q9].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.0wtaafb0c15kwv14vb0rb0pq27q9].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0wtaafb0c15kwv14vb0rb0pq27q9].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0wtaafb0c15kwv14vb0rb0pq27q9].[:Measure Names]' value='156' />
            <format attr='height' value='53' />
            <format attr='text-format' field='[federated.0wtaafb0c15kwv14vb0rb0pq27q9].[sum:DeathPercentage:qk]' value='n#,##0.000;-#,##0.000' />
            <format attr='color' value='#000000' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#e7f1f5' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#e9edf5' />
            <format attr='background-color' data-class='total' value='#f0f1e8' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='0' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#000000' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0wtaafb0c15kwv14vb0rb0pq27q9].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2.066298246383667' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0wtaafb0c15kwv14vb0rb0pq27q9].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{D161975B-0632-4A8A-B9C8-2881BF66DAEE}' />
    </worksheet>
    <worksheet name='Population Infective Per Country'>
      <table>
        <view>
          <datasources>
            <datasource caption='Tableau Table 3 (Tableau Table 3)' name='federated.1i3xzx117rvy6415swvm31ebllh5' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1i3xzx117rvy6415swvm31ebllh5'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i3xzx117rvy6415swvm31ebllh5].[none:Location:nk]'>
            <groupfilter function='level-members' level='[none:Location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1i3xzx117rvy6415swvm31ebllh5].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1i3xzx117rvy6415swvm31ebllh5].[Longitude (generated)]' field-type='quantitative' max='74232254.882746145' min='8309639.5910835406' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1i3xzx117rvy6415swvm31ebllh5].[Latitude (generated)]' field-type='quantitative' max='20010013.570043858' min='-7899208.1582764853' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1i3xzx117rvy6415swvm31ebllh5].[sum:PercentPopulationInfected:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1i3xzx117rvy6415swvm31ebllh5].[none:Location:nk]' />
              <color column='[federated.1i3xzx117rvy6415swvm31ebllh5].[sum:PercentPopulationInfected:qk]' />
              <lod column='[federated.1i3xzx117rvy6415swvm31ebllh5].[sum:Population:qk]' />
              <geometry column='[federated.1i3xzx117rvy6415swvm31ebllh5].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1i3xzx117rvy6415swvm31ebllh5].[Latitude (generated)]</rows>
        <cols>[federated.1i3xzx117rvy6415swvm31ebllh5].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{3E3EF4CD-B064-440A-A4D1-1ED4111CB7F8}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Death Count Per Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Tableau Table 2 (Tableau Table 2)' name='federated.0eddi561nto7ge1h2tgnh0j95aqd' />
          </datasources>
          <datasource-dependencies datasource='federated.0eddi561nto7ge1h2tgnh0j95aqd'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0eddi561nto7ge1h2tgnh0j95aqd].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Africa&quot;' function='range' level='[none:location:nk]' to='&quot;Europe&quot;' />
              <groupfilter from='&quot;North America&quot;' function='range' level='[none:location:nk]' to='&quot;South America&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0eddi561nto7ge1h2tgnh0j95aqd].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0eddi561nto7ge1h2tgnh0j95aqd].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0eddi561nto7ge1h2tgnh0j95aqd].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.0eddi561nto7ge1h2tgnh0j95aqd].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{D8354F75-E334-4F19-AC0A-29C705C3ACDA}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Population Infective</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Tableau Table 4 (Tableau Table 4)' name='federated.0ljawxn0wirbvt105ipyd0cz2b8g' />
          </datasources>
          <datasource-dependencies datasource='federated.0ljawxn0wirbvt105ipyd0cz2b8g'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' forecast-column-base='[avg:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' forecast-column-base='[sum:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0ljawxn0wirbvt105ipyd0cz2b8g].[mn:date:qk]' included-values='in-range' />
          <filter class='categorical' column='[federated.0ljawxn0wirbvt105ipyd0cz2b8g].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Vietnam&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ljawxn0wirbvt105ipyd0cz2b8g].[yr:date:ok]'>
            <groupfilter function='member' level='[yr:date:ok]' member='2021' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ljawxn0wirbvt105ipyd0cz2b8g].[none:Location:nk]</column>
            <column>[federated.0ljawxn0wirbvt105ipyd0cz2b8g].[mn:date:qk]</column>
            <column>[federated.0ljawxn0wirbvt105ipyd0cz2b8g].[yr:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ljawxn0wirbvt105ipyd0cz2b8g].[none:Location:nk]' />
              <text column='[federated.0ljawxn0wirbvt105ipyd0cz2b8g].[none:Location:nk]' />
              <color column='[federated.0ljawxn0wirbvt105ipyd0cz2b8g].[none:Forecast Indicator:nk]' />
              <text column='[federated.0ljawxn0wirbvt105ipyd0cz2b8g].[fVal:avg:PercentPopulationInfected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ljawxn0wirbvt105ipyd0cz2b8g].[fVal:sum:PercentPopulationInfected:qk]</rows>
        <cols>[federated.0ljawxn0wirbvt105ipyd0cz2b8g].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{ADE886E9-387E-4238-982C-F650E60FE48D}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Tableau Table 2 (Tableau Table 2)' name='federated.0eddi561nto7ge1h2tgnh0j95aqd' />
        <datasource caption='Tableau Table 4 (Tableau Table 4)' name='federated.0ljawxn0wirbvt105ipyd0cz2b8g' />
        <datasource caption='Tableau Table 3 (Tableau Table 3)' name='federated.1i3xzx117rvy6415swvm31ebllh5' />
      </datasources>
      <datasource-dependencies datasource='federated.0eddi561nto7ge1h2tgnh0j95aqd'>
        <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
        <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.0ljawxn0wirbvt105ipyd0cz2b8g'>
        <column datatype='string' name='[Location]' role='dimension' type='nominal' />
        <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1i3xzx117rvy6415swvm31ebllh5'>
        <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
        <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='49304' id='8' param='horz' type-v2='layout-flow' w='99496' x='252' y='655'>
            <zone h='49304' id='6' type-v2='layout-basic' w='99496' x='252' y='655'>
              <zone h='24652' id='3' name='Gobal Number' w='43531' x='252' y='655'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='24652' id='5' name='Sheet 2' w='37771' x='252' y='25307'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49304' id='14' name='Population Infective Per Country' w='50394' x='43783' y='655'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='50' h='24652' id='9' is-fixed='true' mode='checkdropdown' name='Sheet 2' param='[federated.0eddi561nto7ge1h2tgnh0j95aqd].[none:location:nk]' type-v2='filter' w='5760' x='38023' y='25307'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='24652' id='11' mode='checkdropdown' name='Sheet 4' param='[federated.0ljawxn0wirbvt105ipyd0cz2b8g].[none:Location:nk]' type-v2='filter' w='5571' x='94177' y='25307'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='24652' id='15' mode='checkdropdown' name='Population Infective Per Country' param='[federated.1i3xzx117rvy6415swvm31ebllh5].[none:Location:nk]' type-v2='filter' w='5571' x='94177' y='655'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='49386' id='10' name='Sheet 4' w='94460' x='252' y='49959'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='43243' id='12' name='Sheet 4' pane-specification-id='0' param='[federated.0ljawxn0wirbvt105ipyd0cz2b8g].[none:Location:nk]&#10;[federated.0ljawxn0wirbvt105ipyd0cz2b8g].[none:Forecast Indicator:nk]' type-v2='color' w='5036' x='94712' y='49959'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='6143' id='16' name='Population Infective Per Country' pane-specification-id='0' param='[federated.1i3xzx117rvy6415swvm31ebllh5].[sum:PercentPopulationInfected:qk]' type-v2='color' w='5036' x='94712' y='93202'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1300' minheight='1300' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='20' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98690' id='19' param='vert' type-v2='layout-flow' w='99496' x='252' y='655'>
                <zone fixed-size='189' h='24652' id='3' is-fixed='true' name='Gobal Number' w='43531' x='252' y='655'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='24652' id='15' mode='checkdropdown' name='Population Infective Per Country' param='[federated.1i3xzx117rvy6415swvm31ebllh5].[none:Location:nk]' type-v2='filter' w='5571' x='94177' y='655'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49304' id='14' is-fixed='true' name='Population Infective Per Country' w='50394' x='43783' y='655'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6143' id='16' name='Population Infective Per Country' pane-specification-id='0' param='[federated.1i3xzx117rvy6415swvm31ebllh5].[sum:PercentPopulationInfected:qk]' type-v2='color' w='5036' x='94712' y='93202'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='50' h='24652' id='9' mode='checkdropdown' name='Sheet 2' param='[federated.0eddi561nto7ge1h2tgnh0j95aqd].[none:location:nk]' type-v2='filter' w='5760' x='38023' y='25307'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='190' h='24652' id='5' is-fixed='true' name='Sheet 2' w='37771' x='252' y='25307'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='24652' id='11' mode='checkdropdown' name='Sheet 4' param='[federated.0ljawxn0wirbvt105ipyd0cz2b8g].[none:Location:nk]' type-v2='filter' w='5571' x='94177' y='25307'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49386' id='10' is-fixed='true' name='Sheet 4' w='94460' x='252' y='49959'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='43243' id='12' name='Sheet 4' pane-specification-id='0' param='[federated.0ljawxn0wirbvt105ipyd0cz2b8g].[none:Location:nk]&#10;[federated.0ljawxn0wirbvt105ipyd0cz2b8g].[none:Forecast Indicator:nk]' type-v2='color' w='5036' x='94712' y='49959'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{30B3CAB6-891F-43CC-98E9-91873E487069}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='115'>
    <window class='worksheet' name='Gobal Number'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wtaafb0c15kwv14vb0rb0pq27q9].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{53E1F65E-96B2-4D57-9714-C02144013B03}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0eddi561nto7ge1h2tgnh0j95aqd].[none:location:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0eddi561nto7ge1h2tgnh0j95aqd].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2A117AEC-933B-4A81-BE59-52332705C294}' />
    </window>
    <window class='worksheet' name='Population Infective Per Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.1i3xzx117rvy6415swvm31ebllh5].[none:Location:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1i3xzx117rvy6415swvm31ebllh5].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i3xzx117rvy6415swvm31ebllh5].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{EDC50E08-984B-4FED-A0D9-766E4289C720}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0ljawxn0wirbvt105ipyd0cz2b8g].[none:Location:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0ljawxn0wirbvt105ipyd0cz2b8g].[none:Location:nk]&#10;[federated.0ljawxn0wirbvt105ipyd0cz2b8g].[none:Forecast Indicator:nk]' type='color' />
            <card param='[federated.0ljawxn0wirbvt105ipyd0cz2b8g].[none:Forecast Indicator:nk]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ljawxn0wirbvt105ipyd0cz2b8g].[mn:date:ok]</field>
            <field>[federated.0ljawxn0wirbvt105ipyd0cz2b8g].[none:Forecast Indicator:nk]</field>
            <field>[federated.0ljawxn0wirbvt105ipyd0cz2b8g].[none:Location:nk]</field>
            <field>[federated.0ljawxn0wirbvt105ipyd0cz2b8g].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{229A99BC-D8B2-4A33-913F-4EED991C8BBC}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Gobal Number' />
        <viewpoint name='Population Infective Per Country'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{FE6D2821-778D-4A74-9F51-0F7A2C2421CC}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Dashboard 1' width='384'>
      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
    </thumbnail>
    <thumbnail height='154' name='Gobal Number' width='384'>
      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
      eyAFlh8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Population Infective Per Country' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Sheet 2' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO3dZ5Rc52Gn+efeW7mrcw5AA41GzgCJSJAASCiApERasmxL8kg7s95jnzme
      PWd2z+5Z72pGOj6zO55Zj2fsnfHa43WQLMsaiZItZpAgARI55ww0gEbobnQOVdVVN+yHRmgE
      hhZIdjXe/+9b103vLRL3ufetasAKgiBARESMYlmWZY/3IEREZHwoACIihlIAREQMpQCIiBhK
      ARARMZQCICJiKAVARMRQCoCIiKEUABERQykAIiKGUgBExsgfHuDM+z/kX/3zb/O1r36Nb/zO
      /8bfbLuI5z/k36qSS9PXN0jWH/Vaxzv8r7/+FX7/jbaH2/dH8XKkBgcZGnZ52NOQiUMBEBmL
      IMPZN/4j3/uLQ8z/9v/J3/z4R/zZ//FVKuxP4Kp5+P/jV7/5Hd67Meq1UAHVDZOpTIYefv8f
      pv0gf/qv/hf+79eOMeR+uoeS/PEp/18l8ojpPcKPfnyQGV//I154vI4wQP1Snq0HCPBzQ1xv
      OcnpC+0MeWHKpszh8dkNRGyX7sunOdbm0VwVpbWlhY6UReXkWcyd3Yh3eS/79p5jONXBvrdf
      Jl1Ryoz585lWN53PfXEjw5MTQIa2Mye40J9gcplHy9lL9Pkx6prnMmdaNTEb/EwHh3Yf4Hq/
      i5OsYNqs2UypLsbx+zi+ax/p8mmUZ69y/moPuXAli1c/RrnXw+n9u7jQ1snw4e28YbVS1rCQ
      1Y9NJjaub7Z82vQEIDIGA6d2c7i3kTVPNI5c/EcJ3GGuHHiNH/zoFQ6cu0b7lWO8+ld/xkt7
      ruEyzJWDb/Ln//kveH3PCa53dNByfCt/94OfcuDyALnMAN0DKXw/y0B3J53dfaSGXeAKb/zx
      H/HSoV6gn1Nbf8Z/+ZMf8v6R87R3tHFq3yv88IevcuZGDnId7Ppv3+fnO8/R3tHGmX1v86OX
      3uJc5xC5XDuv/7//jj//ybucbm3jRsdZNn//T/n+9qsEXpbBgT7S2SyZwT66ujrp6c/gjcP7
      K58tPQGIjMFQbw85yigtuX9ZdqiNd199nb66b/A//uaTVIUHOfnf/oB//f3XWLTwN0ZWihZS
      P30p6+bX0XP2Df7wP77Opet9PLV6PV9LneAv3j/Puq/9dzxTfWuvV+87TqigjClzV/FYUyGt
      +/6G//SnZ7nalWF611b+eusQ3/j93+aJmjjplq38p//8LnsvPMak+YAdIlkzjeXrVlAa7yJ+
      Yjt/e7SV2IbVrFr7eXbuu87g6o1847lFFN5bN3kkKQAin5DhzDnOnvVp+tw8qgvCWJQyY8V8
      4j/exMkrv0EzQEEpdRUlREMWthPGtnx83/+oXd8lWlxOVWkhYcfCDoexggDf97l65hBXW/fw
      x//yJH8K4KbpuhHi6Q1pvMCBUIRkWRXlBREgRDhk4Xq6zzeZAiAyBtXTZ1Pm/CPHT2ZZNDuC
      NWpZgI/vW9h3/TMbFhYeY7zG/1JyuSxB+Tr+zV/+TzQ5d0ZmOyH87LlPfwAy4egzAJExsKau
      4NnZsPlnr3GhK43n++RS3VzrHCQSbaa5OeDCyRN0pl38XD/ndh1iqHY1syZ9jJ0nEsT9NP0D
      GfwgwA8CxvLdovrpc6noPc57x7pxrZE7/NxAL72p7Ed/tTMcIRa2yAykcP2RpxJ9G/TRpycA
      kbFwJrHxt77FlR++w49+0MW02iTBcC/pmrV8a+0k1n1xA1c2beHv/+4qldFeju+3eO6bzzMz
      ASc/at9TVvD5GdvZ/uO/JTd/GvOWLGZmw8cfWtG8dXx943l+/Jf/D/6KBZQnbLy0R82K9Txe
      /xEbl9SzdPFUzu57l5/Zl6lrXs5TK6aS+PiHlwnI+e53v/vd8R6EyEQSKZvKvFkNhIcHSGd9
      QsWTWDh/BtUlSYprp9JUU0B2aJBhu5S5657n2WWTiVgWTjhBZf0UZk6tIxF1sOwIReW1NE+f
      RmVRFMLlNDVXE8qlyTkFVNfVUl5UQDxZRdO8OUwujRKKFlLTOI3mxkpiYRvbiVJS1UjzjMmU
      FpbTNH821XGPXM4lsGNUTJ3N3OY6CqMREoXlNM2azaTyOGATjhfTMH0OM+uKwElQWd9AVQGk
      MjmiJZOZ2lBy3zed5NHxve9973uW/lF4ERHz6B+FFxExmALwkIIgQA9RIjIRKQAPyfM8crnc
      eA9DRGTMFAAREUMpACIihlIAREQMpQCIiBhKARARMZQCICJiKAVARMRQCoCIiKEUABERQykA
      IiKGUgBERAylAIiIGEoBEBExlAIgImIoBUBExFAKgIiIoRQAERFDKQAiIoZSAEREDKUAiIgY
      SgEQETGUAiAiYigFQETEUAqAiIihFAAREUMpACIihlIAREQMpQCIiBhKARARMZQCICJiKAVA
      RMRQCoCIiKEUABERQykAIiKGUgBERAylAIiIGEoBEBExlAIgImKo0HgP4IMFuMMpBlNZoslS
      4uEHrOFlGRoYIEWM8qIEjm0BAb6bZWhwkEzWwwrHKSpKEnGs2/v1hofo7U/h4RBNFJCMR3Fs
      iyDwyaUH8MLFd44XZBnoTRMuKiJ2ex8iIhNfXgYg8IbpbW/lzInDHDjWwrxf+Z9ZM/m+lRi6
      eoxNr73BVm8p3/v2OkoKIgS5FFdP7WPHvpPcGHRxEuXMW7mex2dVE7PBT93g6I4t7DzVgWuF
      KK6dwYrVy2iqSmK7WS7s+Alt0/971jYCeAxe2cPPXm1nxddfZGbR2AJw5UY/bd2Dn9C78skp
      ScZori8b72GIyDjLywAMXDvD0WNn6fQqqC658IA1AnJDnZw8e5Wy2kYqh+I3X/cZ6rjAkZMd
      1K/6FV6cXs7g+Z28sWMrRZUvsrASOo5uY3d7JV/+Z1+hOujh6PatHDl+lvKihZTe8264fZfY
      tuUsNeteZHrR2GfL3jnQwktbT455u0/b8jn1/N4314z3MERknOXlZwB2tISmx9azcf1iKuP3
      Lw+8YdpbTnEtV8H0GQ0kbl24g2E6b3RjF01hdlMlEduhpHERC6f4XLzQied1c/Ksx7wnFlMX
      d3AS5cyeNw2GeugdyNx9ELeX07sO0lPzOKubi/PzjRIReQh5eV1LVk2iobKED5pyzwxc58yp
      DhrmLaAmOeq23csxlMliF5SRDI9sbDshkqXl+N09ZDO93KCEmsLIzQ0sosUlJHIeqcww/p0d
      0XF6PydSJSxf0kyBrbl/EXn05OUU0IcJghyX975Lz5QvsqauAOfqXQsJwg6RcJxbl3hsm3Ay
      ScLz8T0Lr7CAImdU92IxkqEQdhAAkOq6yiub/zVvxmpY98KXqS+NYo26/udyOVzXvWtMvu+T
      zWbvG2sum/tkTvoT5rkeg4P599mEiHy2JlwAMhff4rWztWz8kkf7tSvQ3kNmwOf69et4lYVY
      OZesmyELRAGCgNzQEGm7GMu2sQeHGPB8Km/tcHiYIdel9OZVPlFez3O//U2aOt5m2/nztE2q
      YnJpBOvm8nA4TDh85ytJruvi+z6RSIR7hSMP+OpSHnBCDslkcryHISLjbMIFoKdjiAKnmy2v
      Xh55Id1FV1fAO7l2Zj71ZaZFIwR9vQy5AdGQhe+6pHp7oHQ20bhNhddPRypLU1kCCMj29zEU
      dohHI6Pmw2JMXrya+Z1vs23PCZ59eiElYU0DicijZcIFoG75r/I/LB/1Qut2/sNOj288u4KS
      ghD9l0vxzp/n7KVGFk8tIXX1OMcuuUx7phLHgZnTAt7cdZym51dQHvRz5sQFSEyiuDAGjJqy
      CZUyd/VjXP/Fu2w5Xstzi2om3pslIvIh8vCa1sep93dy8HwbaTfHjdZ26PxrzhfEaVr+JMtm
      1BJzPmhbm2TNVGZP7WTvjpc58R5YdoSG+WuYWTUyRVO7cCVzerfxyt/9AAuIFNWzcHkzJXEH
      3Lvn7O2iKTy5YTmvv7WJXUW/wqqmZH5+ai4i8kvIwwDEqZ25gFjddDwA1t983aGwooTwvVfg
      qvn8+npIxkZOxY4U0jh/BUV10xlIu9ixIqqqyonf3M5J1vH4umdoaO8jR4iC4jLKSgoIWxA4
      ERofe57a2189tYhVz+KZzxWTSUTRJJCIPEryMAARiqvqKK76mKtHi6iLjn7BwokUUFFbQMUD
      N7AIJcqZNLX8/iW2Tbykmrt/9cChsKqBwo85HBGRiUIzGiIihlIAREQMpQCIiBhKARARMZQC
      ICJiKAVARMRQCoCIiKEUABERQykAIiKGUgBERAylAIiIGEoBEBExlAIgImIoBUBExFAKgIiI
      oRQAERFDKQAiIoZSAEREDKUAiIgYSgEQETGUAiAiYigFQETEUAqAiIihFAAREUMpACIihlIA
      REQMpQCIiBhKARARMZQCICJiKAVARMRQCoCIiKEUABERQykAIiKGUgBERAylAIiIGEoBEBEx
      lAIgImIoBUBExFAKgIiIoRQAERFDKQAiIoZSAEREDKUAiIgYSgEQETGUAiAiYigFQETEUAqA
      iIihQuM9gA8WkO5u5cKVPsqb5lOTvPP6QMclLra20Z/OEdgRCqsmM31KNYmQDQS4qW4uXbhI
      e2+GcFEtM2ZNpThi3d5+uPsSx05dJWNFKa9vZEpdBbGQReC79F0/T7p4JrW3juf1ce7YVYpn
      zqYyZt03ShGRiSovA+Dn+rl87AD7Tl+j68Y15pSMDsAgZ/Yd4BoxwrYDfg/XL56jdfBpnltU
      g5/u5uS+XZzsyJJMxnGvX+RKV5b1T86i2AG3+yyb39xHqqiMJDe40nqd/iUrWNRUSchzaTv5
      Pm3TbwXApePYFrYeK+GLM2YBCoCIPDryMgBd50/Q0m8zZfYiCtyr9yyNMHnBCporKimMhrG8
      DD1nN/M3287Sv6gS7/pFLnf6zFr5DHNqC8i0n+a9rXs4fnUKqyZbXDqwn66yeXx5/TySQYqL
      B99jf8sFJteUURW9+0jZ9mO8tTfN4uc2UBvXbJmIPFry8qpW0jiPZctWsGBGA8nwvUujVDbU
      URwLY1tghWIU2D7ZZIKYP0xXTz9OspHG2iQh26agopHmxkLaLrXjuR2cvZJg7sIpFIVt7EgB
      jc1TsNODDAykCEYfJtfB3i0nKFy0knlVcd37i8gjJy+fAMLxJGEgl848cHnge6T6u+gf6Kft
      /FH2tDh8+fm5hL1hMrkcdrKIhD1yybYch3hxCaELA2RSDj2xQuZEb1XFwkkWUuheJZ3NERDG
      91wGe65z5Nw2Wkuns2FOA2HrzuU/CAKCILjvZ9/37x9nENz3Wl4IeOB4RcQseRmAj+KmBziy
      +e/ZcwWipQ3Mmd9EQcgauUsPhQgFYZxbK1sWdiRK5NbP0Sgxe9T9fDhExHFuPwoND3Sx79Df
      c8yOMX/tUhJRm1HXf1zXxfO82z/fCsDo10avm4883yOTeXBcRcQcEzIA4YISVn7lX7DcyzLU
      2cqJI3t45+0cL74wDdvzyGXSZIEYgO+TGxogHS7DCTmEBwfp8zyqbu0snWHQ96i0RxIQL6lm
      7a9/i7mZXbx3+CTn6qqYW1eAfbMC4XCYcPjOvJTruvi+TyQS4V6j18snjuOQSCTGexgiMs7y
      8jOAj8t2IhRWT2P52kXYx05wjSjJeBQ/dYP+4ZHpF9/N0XfjBqGKciKxUmqcbq70DN/cQ0C6
      u4t0OEQiFh31ZoSpbF7CsskBu7fsoW04T6dyREQewsQLQN8JNr97mGu9w7g+eLkBLh84wtWy
      CirtCJXVVfh9LRw+dZWM59J5eht7LxUwo7kM2y5l7rxCjr61jZYhF3fwOgcPnsVOVlBafM9X
      gJwCGhat4vGiFl7ffpHs+JytiMinJg+ngDrZ89Iv2HyohVQQMJwegMPfYZNTyMLnvsrGhbUU
      pV7hp3/+Mt0Dw/ihOBWNi/jyr62i1LawKqexcvkAmzf9PX/w0gCxmrl84YVnmVY08qlAyZx1
      vJDZxE/+8Pfpt5JMXbSGDUtmUhS2wQXLdrj1EYEVK2Xehi/T89O/440jv8lzC0onYDFFRB7M
      CvL2qyoTw4d9BvD9Nw/z0taT4zCqD7d8Tj2/98014z0MERlHlmVZuqEVETGUAiAiYigFQETE
      UAqAiIihFAAREUMpACIihlIAREQMpQCIiBhKARARMZQCICJiKAVARMRQCoCIiKEUABERQykA
      IiKGUgBERAylAIiIGEoBEBExlAIgImIoBUBExFAKgIiIoRQAERFDKQAiIoZSAEREDKUAiIgY
      SgEQETGUAiAiYigFQETEUAqAiIihFAAREUMpACIihlIAREQMpQCIiBhKARARMZQCICJiKAVA
      RMRQCoCIiKEUABERQykAIiKGUgBERAylAIiIGEoBEBExlAIgImIoBUBExFAKgIiIoULjPQCZ
      GP520xHe3n9hvIdxn+986ymm1ZWO9zBEJiQFQD6WoUyOnoHMeA/jPp7nj/cQRCYsTQGJiBgq
      j58AfIY6znH8XBc1c1cyufjOEi87wJUzxzjX2kM6sElWT2fp/CkURhwgIDfQzunjJ2ntShEp
      m8KixbMpj9m395vuOMPuA+cZIk5N0yxmN9WSCFkEnkvXpSMMli1hSsnN1d0uju66QNmSpdQn
      1EsReXTk5RXNz/ZyZsdr/PTVPRw6uJ1LfaOXpjn29s/ZdWGQSFEZFaUJBs+8zxsHr49sO3SD
      w7t2cbI9S2FZGbQfZNM7R+l2R7Z2bxzn1Vf3MZQoozTh0nJwFwfOtDHsQ+C7dF44wMXbx8tx
      bf/b7LruE3Gsz/AdEBH59OXlE8CNM0e5ElSx4sm5XN7903uWuhRNXc36ulpKC+M4lke6Nsd/
      ffMcvctrca9don0owrxVTzKjMkq2u4bt72zhWOsMnpxqcX7vYdxpy1i3uplYkOXakffY2dpC
      d0Ml1fG7j5S9dpDXDzms/tpCKqIKgIg8WvIyAJWzVrAGG3JDdDj3Lk3SODOJbY9ckAPfwvIh
      KIgT99Nc6hsglJxCQ2UMx7KIFdcwdUoFhy5dx22wOdtRwtzHa0k4NhClvqkRp/UK/YMpquKR
      m8cI8FKtvP/uOSateZoZJVF0+ReRR01eBsAOhbGBXO5BSy1sGyDAzQzSefUUO9/vYNnTy4l6
      HlnPwy4oIGaNXLIt2yaSLCTSnmI47TAQT1IaCt3el5UooNDzGc65BETwcsPcaD3NrqMH6a6Z
      zTNTKwlZdy7/vu8TBMHtn4MgIAgCXNe9b6S+n5/fUPmg8X74Nvl5Lp7njflcRGREXgbgIwU+
      mYF2zhw6xKm2LJOf2MDS+gLw+sG2sW3nzocbloUdCt850XDorgs6jkNo1Pq59AAXWnbQ7uaY
      vCxJJHT3vb/v+3ied2coQXBfFEavm48Cf+wByNdzcT1XARD5JU3IAGRT7RzZsZ02p4GlT82l
      saqQkAX4Nk4Q4KbSZIE4gO+TGxogHakgFHaIDA7R73nU3NpZOs1g4FHt2FhArKiC5Ut/k4X+
      QbbuPsGpuioWTyrCvhmNUChEKHTnbXNdF9/3iUQi3Gv0evnEdmxisdiYtnGc/DyXaCQ65nMR
      kRF5+S2gD+fTeuAdLoZmsHLVYzRV37z4AzhRCuNRvFQ7fZmRO3LPzdLT0U6kqoJwtJy6cCeX
      u279QlPAUNcNMpEwiVhs1Dx/mNLGBaycGWXv2ztozeTn3a+IyMOYgAG4yol9FnNXzqGiIHT3
      h7NWmMqaauhtYf+xS6S9HB3HNrPzYimzp5di28XMW1TGkdc2c2YwR67/Cnv3nsUurKKsOHr3
      YewYVfOeYH39VV599zzDn+Upioh8BvLwub6TPS/9gs2HWkgBge/Dse+wiUIWPvdVNjb3cLHr
      BHv+7ffu2ipct5bf/Z2nKaloZu36HJtf/wf+/cu9JCY/xou/9gWabv4SV3LWBr7NZn7wR/+G
      bruI2SueZsOyWRSGLALPIhwrJH7zXbHCBUzf8HX6f/7XbDpSybMLSidiMUVEHsgKHvTppXxs
      H/YZwPffPMxLW0+Ow6g+3PI59fzeN9eMaZs/+8V+Xtt19lMa0S/v3//OBmZMKh/vYYhMOJZl
      WbqhFRExlAIgImIoBUBExFAKgIiIoRQAERFDKQAiIoZSAEREDKUAiIgYSgEQETGUAiAiYigF
      QETEUAqAiIihFAAREUPl4V8HLfLpyeY8/vil3eM9jAf69hcXUVGcGO9hiEEUADGK5/u8f+Ty
      eA/jgb62bi4Uj/coxCSaAhIRMZQCICJiKE0BiUxQwzmXLQcvjfcwHujJhZOJR8PjPQz5CAqA
      yASVyuT4L/+wd7yH8UCLp9coABOApoBERAylAIiIGEoBEBExlAIgImIoBUBExFAKgIiIoRQA
      ERFDKQAiIoZSAEREDKUAiIgYSgEQETGUAiAiYigFQETEUAqAiIihFAAREUMpACIihlIAREQM
      pQCIiBhKARARMZQCICJiKAVARMRQCoCIiKEUABERQykAIiKGUgBERAylAIiIGEoBEBExlAIg
      ImIoBUBExFCh8R7AB/PpbdnDlj2XaVr3NRZUjV4W4KZ7OL3vPc77Tax+fAHliTvLMl3n2bHl
      fY5d7iNev5AvbHyKSUn79n77W3bws1f20WsV0rz0CdYsnUFxxMJ3s1w5/DY9DRtZWH1z9dwV
      3v7JfhqefZ5ZxeqliDw68jIAXqqNA2+9zDstESriHZRn7l7ef/UQb722jct9GYpmljHs3VoS
      4PZeZts7u+mvXMKvPlVH37FNvPzTLbzw9XXURWD40ja+//NLrPjaN2j029m7fS/v2yHWPdZE
      PPBJ9Vyjp+Lm3vw0Z956hZbKDTyRtD7Lt0BE5FOXl7e0Ny604M/4PP/8t15gRsn9y6+da2Xm
      8/+M3/jCYipiwZ0FQY72K61kEw2sWLaA2opKpq94juVVFzl0uo8g6OfIrotM++IXeayhksrJ
      c1mzvIl0Vyudfdm7D+Ln6D6+lc0dM3hh3VRijgIgIo+WvAxAzbyVLJ89maj94IvurKe+xLya
      xP2D9zL0DqZxihooT4xs60RiVDRMYvjKNdJDbbS4tcysvjVfZFFYW0dBJkf/YAr/9o5c2k9s
      YfP5CBu/tJoKJy/fJhGRh5KXU0C/tCAgCDtEwnEit16zLMLJJAnPJ/AtvGQBhaMv6NEYyVAI
      Oxh5kkh1XeWVzd/ljVgN61/4MrUlEaxRHcrlcriue9dhfd8nm73nCQLIZXOf8Al+MjzXY3Bw
      cEzbuG5+nks6nR7TuQznvI9eaZyMnIvzsddPpYY/xdE8nFQ6xWA4+OgVZVw9WgHAwsp5ZHMZ
      skAUIAjIDQ2SdoqxbBt7cIgBz6fy1ibDGQZdl9KbV/lEeT3P/fZvMq3zbd4/d5ZrDVVMKYtg
      3VweDocJh8O3j+i6Lr7vE4lEuFc4Er7vtXzghBySyeSYtgmF8vNc4vH4mM7FGc7PkMHYzyUX
      fPxYfNYS8QTJZMF4D0M+wqM1t+GESUQjBKkehnIjdx++m2OopwdKS4jGi6n0+2gfunW3HpDt
      6yMVdkhEI6PejCiTFq5mYbKb7buP0evqTkZEHj2PVgDsKBUVpXj9Fzl9sYus79HXeoxjl3wa
      p1bgOOXMnGZxbOdR2jMeXrqH0ycuQKKE4qLY3fsKlTBn5ePU9Bzm3aPt5O99o4jILycPp4B6
      ObFlG/vPXiftuXRebYO2/8qpRILmVetYOSvgvb96nUtBwHBfO50Zm0vnzpCMVbD6qy8yo3oq
      c5u72L3zHzm2xccOF9C0+ClmVo5M0dQuXMXCvvd4+Qd/SYBNvKyRJSubKYk5cM88t1U0mSc+
      t5I333iTnUVf4YnmwkesmCJisjwMQAGT5j9OUdPwqG/lANgkSssI27D4c59j1r2bWWHK4mCF
      kkyet5yi+pkMZVzsaCHlFSXEbl657YIalqz9PA2d/biESBQVU1KYIGRBEIowZdkL1N9+GLCI
      Vc7k6Y2lZGNx9EVQEXmU5GEAwhSWV1NY/sFrVE6e/CHbW9jhBGVVCco+YHkoXkLdpPt/wcCy
      bGJFFdw9GWSTLK/5OAMXEZlQNKMhImIoBUBExFAKgIiIoRQAERFDKQAiIoZSAEREDKUAiIgY
      SgEQETGUAiAiYigFQETEUAqAiIihFAAREUMpACIihlIAREQMpQCIiBhKARARMZQCICJiKAVA
      RMRQCoCIiKEUABERQykAIiKGUgBERAylAIiIGEoBEBExlAIgImIoBUBExFAKgIiIoRQAERFD
      KQAiIoZSAEREDKUAiIgYSgEQETGUAiAiYigFQETEUAqAiIihFAAREUMpACIihlIAREQMpQCI
      iBhKARARMZQCICJiKAVARMRQCoCIiKEUABERQykAIiKGUgBERAylAIiIGCo03gP4YAGprkuc
      u9xDRfNi6grvLPHdYTpbT3Hucg+5cDGNM2YwqTyBY1lAQG6ok4vnLnC9J024uJ5Zc5opjVq3
      95vpauHw8cukrRiVDU00TaokHrIIfJfeq2dIlcyh/tbxvF7OHGqleM48quMWIiKPirx8AvCz
      /bTsf4eX39jBzu2bOd9z9/K+lt28u+0k3cMuw13n2Pr2Li4P5Ea2TXdxYu8uDp5rJ+O6dJ/f
      wzvvn6TXG9nW7TrNW2/s5FraxR26wfG9uzh84QbDPgSeS/vpHZztvnWkHO1H3uX9M734n9nZ
      i4h8NvIyAJ3nj3NxKMrMhUtpLA3uWTrEqV1HKFywnqefXs/Tz6xnQeIiO091Ax691y5xpQdm
      rxxZvnbNYyS69nL8SgbIcHH/AfqrF/LM+vWsf3o9y6aEab14gZ4h975xZNuPsmlflqVPL6VG
      d/8i8ojJywCUTV3IiuXLmTOtloJ7J6mGWzh3YwoL5lYSd2yceBnzF02l7cxlsn6G7t5+nOQU
      GmsKcCybRNkkmhuLab/Uhuve4Oy1JHPmT6YwbGOHE0yaNgU7PUT/YJo7qQkIsm3sfvcUpUtX
      Maciji7/IvKoycvPAEKxBCEgl07fv7C/m97SaspDty7JFqGKCkp62un3XDI5F1V1sXsAAAjn
      SURBVDtZRNweWW45DrGiYkIXBhlOOfTGC5kXCd/e1ilMUuj5ZLI5AsL4bo7+ziscPL2Ta+Uz
      2DC7noh95/IfBAFBENz3s+d59w119Hp5JeCB4/3wbfLzXHzfH9O5+H7+TuaZfC4yPvIyAB/F
      ikUJj34hEiFm3bxIh2xCQQjn9soWdiRCZNS6EWvU/bwTIuI4tx+FsoM9HD7+j5wmxOw1S4mH
      77739zzvrv+xgyDA9/0H/mH03Pz8A+D5Htlsdmzb5Okf5lwuN6ZzyWbvn+rLF9lcdoznMrb/
      hp+lbDZLNjshLy9GmXj/haIRQt29DAClt17r76cnHCJi2TheQC6TYhiIA/g+ucFBUuFynJBD
      ZHCQft+j+ta2mTQDvkelbWMBsZIq1jz+LeZl9/DegZOcqatifn0S+2Y0QqEQodCdt811XXzf
      JxK5nZjbQuH8fHsdxyEej49tm1B+nks0Gh3budi5T28wDykWjY3pXDL52zJisbGdi4yPvPwM
      4EMVNFDjnedK3607bp++1kv4tTUUOBGS8Sh+6gb9mZEpC8/N0tfZQaSygkisjBqni9bu4Zvb
      BqS6u8iEQyTisVHz/GEqmhazfKrFnnd3c204P6c/REQexsQLgFPD3FkeuzbtpT3jkmk7yms7
      Bpg7vxbHilBZU4nf28Khk62kPZfOU++x+2IhM5pLse0S5s4v4uib73FhyMUduM6B/WexCysp
      LbrnDt5JULdwFSvLLvH6+y0MP3g0IiITVh4+13ey56VfsPlQC6kgIDecgsPfYZNTyMLnvsrG
      pU1MWfU8C9/9BX/1B68xHKvh8We+yIpJhYBFtGIaq1el2LzpJ/y7n/cTr1vAxhc3Mq1w5FOB
      4jlP89XcW/z4D3+fPquQaUufZMOSmRSFbXDBDkUI3cyiFS1hzoYX6fnpD3nzyDd5bkHpBCym
      iMiD5WEAKlj2lX/Ksq98yCrJapY9/1sse/7+RZYdpqRxCV/5rSU8aBeWE6d+yZf4l0u+dP/C
      cIwZa/8JM+6sjR0pY83Xf3fMZyEiku90QysiYigFQETEUAqAiIihFAAREUMpACIihlIAREQM
      pQCIiBhKARARMZQCICJiKAVARMRQCoCIiKEUABERQykAIiKGUgBERAylAIiIGEoBEBExlAIg
      ImIoBUBExFAKgIiIoRQAERFDKQAiIoZSAEREDKUAiIgYSgEQETGUAiAiYigFQETEUAqAiIih
      FAAREUMpACIihlIAREQMpQCIiBhKARARMZQCICJiKAVARMRQCoCIiKEUABERQykAIiKGUgBE
      RAylAIiIGEoBEBExlAIgImIoBUBExFAKgIiIoRQAERFDKQAiIoZSAEREDKUAiIgYKjTeA/hl
      uKkuzh4+wLmOFFasgpmLF9BUmcSxLCAg23+dU0dPcOnGEJGKqSx9bB4VsVut80m1nWTHvnMM
      EaeueQ5zptVTELYIvBydLYcZrHiMqSW3DtbJoe3nqHh8GQ0J9VJEHh0T8Io2xOFNP+dwV4Sq
      +nqKg+u899pWLvRnAfCHOji8cxenuwMq6+uIdh/hzbcO0+WObO12HOXlVw+QK6ujrtTh8qHd
      7D9znYwPge/RdfEQl/puHSvH1b1vsfeGQ8yxxuVsRUQ+LRPvCeDKHrZ2T+Ubv7aSykQYf3ga
      Ba/+kG3HOpm+uobua5foSMdYsHoN0yuiZHuq2PHOZo5ensXaJji39wjMXMna5dOIkaW+4D22
      X7lI96QqauJ3Hyp7dT+vHY6w5tcXUB5VAETk0TLhngByPe2EGudQVRDBtixCsRIWLJpG6+kW
      Mn6a7t5BQoVTqa+IYlsW0aIqGqdU0XXpGrlsO2c7ypg7q4a4Y2E5EWqnNuKk0wwMpAhuHyXA
      HbzI1ndaaFr7JNOLI+jyLyKPmgn3BBAuKWd4/2k6BiuoLAiBnyMTipLsH2LQ88j6HnZBATFr
      5JJt2TaRgiSRtjTZjMNgQQEljnNzbxZWPEGRH5B1XQIiuNkM7S3H2X74CL31c9gwpfzmZwsj
      fN8nCIL7fnZd976x+r7/qb4Xv6wPGu+Hb5Of5+J53pjOxfO8T3E0D8fkc5HxMeECQP1iVsZf
      Ycs7LlWFIWzbxkpdJuVVjSy3bezAvnPHblnYodCdEw05hEZd0HFsHPvO+t7wEK2tB+h2M9Qt
      SRC+Z+7f9/27Luy3AjA6CqOX5aPAH3sAfP/+88sHY73Q5PNFyfVcY89FxsfEC4BdweMbP0/J
      iXN0DOYIIgVUlSSxS4opsG2cIMBNpcgCcQDfJzs4SDpSSSjsEB0cos/zqLm1v3SagcCn2hmJ
      QLSwnMeWfJ1FHGTrzhOcqKtm6eQi7JvRCIXufstc18X3fSKRyH1DvXfdfGE7NrFYbEzbOLef
      mvJLJBIZ07kEVu5THM3DiUaiYzqXaC4/owxjPxcZHxPuMwCAaGEt85avYf3T61m7ehGJoX7q
      Zk0hbkcpjMfwUh30pUf+cHhult6ONqJVlYSj5dRFOrnclbm5p4ChzhsMR0Ik4rFR8/whSibN
      Z9XsOPve2sblTH7eyYuIPIwJGIBeju85QvvAMG5uiNa9b/DalRrWzq0AK0xVbTX0trDvaAtD
      uSxtRzax41IFc2aUYNvFzFtcwdFX3uJUf5Zs72V27zmLXVRNWXH07sPYMSrmPsHnprTxyttn
      yQQB+Xu/JSIydvk5R/GhEsTd0/z4T/6BzlyIiqlL+MKza5h88wIeqWhm3TMu777xCv/htR4K
      Gh/nxd/4AlNv/hJXcubn+KfWO/zgT/4vuq1iZq98hg3LZlEUsvBdi0iihER45EhWqIBpz3yD
      1T//a94+Ws3GBaX6NpCIPDImYAAiNK36Vf7Fqg9abhGvms3GfzKbjQ9cblMy4xl+939/5v4l
      oShNq75K012vxlj84m+z+CFHLSKSbybgFJCIiHwSFAAREUMpACIihlIAREQMpQCIiBhKARAR
      MZQCICJiKAVARMRQCoCIiKEUABERQykAIiKGUgBERAylAIiIGEoBEBExlAIgImIoBUBExFAK
      gIiIoRQAERFD/f+zLVHUTcr1lgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Sheet 4' width='384'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
